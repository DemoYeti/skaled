/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_
#define JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_

#include "ModularServer.h"

namespace dev {
namespace rpc {

class SkaleStatsFace : public ServerInterface< SkaleStatsFace > {
public:
    SkaleStatsFace() {
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_stats", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_statsI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_nodesRpcInfo",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_nodesRpcInfoI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaInfo", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaInfoI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaVerifyAndSign",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaVerifyAndSignI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaBSU256", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaBSU256I );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaBroadcastTxnInsert",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaBroadcastTxnInsertI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaBroadcastTxnErase",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaBroadcastTxnEraseI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaTxnInsert",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaTxnInsertI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaTxnErase",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaTxnEraseI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaTxnClear",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaTxnClearI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaTxnFind", jsonrpc::PARAMS_BY_POSITION,
                                    jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaTxnFindI );
        this->bindAndAddMethod( jsonrpc::Procedure( "skale_imaTxnListAll",
                                    jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, NULL ),
            &dev::rpc::SkaleStatsFace::skale_imaTxnListAllI );
    }

    inline virtual void skale_statsI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_stats();
    }
    inline virtual void skale_nodesRpcInfoI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_nodesRpcInfo();
    }
    inline virtual void skale_imaInfoI( const Json::Value& request, Json::Value& response ) {
        ( void ) request;
        response = this->skale_imaInfo();
    }
    inline virtual void skale_imaVerifyAndSignI(
        const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaVerifyAndSign( request );
    }
    inline virtual void skale_imaBSU256I( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaBSU256( request );
    }
    inline virtual void skale_imaBroadcastTxnInsertI(
        const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaBroadcastTxnInsert( request );
    }
    inline virtual void skale_imaBroadcastTxnEraseI(
        const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaBroadcastTxnErase( request );
    }
    inline virtual void skale_imaTxnInsertI( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaTxnInsert( request );
    }
    inline virtual void skale_imaTxnEraseI( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaTxnErase( request );
    }
    inline virtual void skale_imaTxnClearI( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaTxnClear( request );
    }
    inline virtual void skale_imaTxnFindI( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaTxnFind( request );
    }
    inline virtual void skale_imaTxnListAllI( const Json::Value& request, Json::Value& response ) {
        response = this->skale_imaTxnListAll( request );
    }

    virtual Json::Value skale_stats() = 0;
    virtual Json::Value skale_nodesRpcInfo() = 0;
    virtual Json::Value skale_imaInfo() = 0;
    virtual Json::Value skale_imaVerifyAndSign( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaBSU256( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaBroadcastTxnInsert( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaBroadcastTxnErase( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaTxnInsert( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaTxnErase( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaTxnClear( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaTxnFind( const Json::Value& request ) = 0;
    virtual Json::Value skale_imaTxnListAll( const Json::Value& request ) = 0;
};  /// class SkaleStatsFace

}  // namespace rpc
}  // namespace dev

#endif  // JSONRPC_CPP_STUB_DEV_RPC_SKALESTATSFACE_H_
